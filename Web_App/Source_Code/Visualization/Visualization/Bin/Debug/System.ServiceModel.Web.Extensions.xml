<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel.Web.Extensions</name>
  </assembly>
  <members>
    <member name="T:System.UriTemplate">
      <summary>A class that represents a Uniform Resource Identifier (URI) template.</summary>
    </member>
    <member name="M:System.UriTemplate.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.UriTemplate" /> class with the specified template string.</summary>
      <param name="template">The template.</param>
    </member>
    <member name="M:System.UriTemplate.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</summary>
      <param name="template">The template string.</param>
      <param name="ignoreTrailingSlash">A value that specifies whether trailing slash “/” characters should be ignored.</param>
    </member>
    <member name="M:System.UriTemplate.#ctor(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</summary>
      <param name="template">The template string.</param>
      <param name="ignoreTrailingSlash">true if the trailing slash “/” characters are ignored; otherwise false.</param>
      <param name="additionalDefaults">A dictionary that contains a list of default values for the template parameters.</param>
    </member>
    <member name="M:System.UriTemplate.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</summary>
      <param name="template">The template string.</param>
      <param name="additionalDefaults">A dictionary that contains a list of default values for the template parameters.</param>
    </member>
    <member name="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Creates a new URI from the template and the collection of parameters.</summary>
      <returns>A URI.</returns>
      <param name="baseAddress">The base address.</param>
      <param name="parameters">A dictionary that contains a collection of parameter name/value pairs.</param>
    </member>
    <member name="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)">
      <summary>Creates a new URI from the template and the collection of parameters.</summary>
      <returns>A URI.</returns>
      <param name="baseAddress">A URI that contains the base address.</param>
      <param name="parameters">A dictionary that contains a collection of parameter name/value pairs.</param>
      <param name="omitDefaults">true is the default values are ignored; otherwise false.</param>
    </member>
    <member name="P:System.UriTemplate.IgnoreTrailingSlash">
      <summary>Specifies whether trailing slashes “/” in the template should be ignored when binding parameters to create a URI.</summary>
      <returns>true if trailing slashes “/” should be ignored, otherwise false.</returns>
    </member>
    <member name="P:System.UriTemplate.PathSegmentVariableNames">
      <summary>Gets a collection of variable names used within path segments in the template.</summary>
      <returns>A collection of variable names that appear within the template's path segment.</returns>
    </member>
    <member name="P:System.UriTemplate.QueryValueVariableNames">
      <summary>Gets a collection of variable names used within the query string in the template.</summary>
      <returns>A collection of template variable names that appear in the query portion of the template string.</returns>
    </member>
    <member name="M:System.UriTemplate.ToString">
      <summary>Returns a string representation of the <see cref="T:System.UriTemplate" /> instance.</summary>
      <returns>The representation of the <see cref="T:System.UriTemplate" /> instance.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.WebBodyFormatMessageProperty">
      <summary>Stores and retrieves the message encoding format of incoming and outgoing messages for the composite Web message encoder.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.WebBodyFormatMessageProperty.#ctor(System.ServiceModel.Channels.WebContentFormat)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.WebBodyFormatMessageProperty" /> class with a specified format.</summary>
      <param name="format">The <see cref="T:System.ServiceModel.Channels.WebContentFormat" /> that specifies the content type to which an incoming message body is mapped.</param>
      <exception cref="T:System.ArgumentException">The format cannot be set to the <see cref="F:System.ServiceModel.Channels.WebContentFormat.Default" /> value in the constructor.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.WebBodyFormatMessageProperty.CreateCopy">
      <summary>Returns the current instance of the current property.</summary>
      <returns>An instance of the <see cref="T:System.ServiceModel.Channels.IMessageProperty" /> interface that is a copy of the current <see cref="T:System.ServiceModel.Channels.WebBodyFormatMessageProperty" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.WebBodyFormatMessageProperty.Format">
      <summary>Gets the format used for the message body.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.WebContentFormat" /> that specifies the format used for the message body.</returns>
    </member>
    <member name="F:System.ServiceModel.Channels.WebBodyFormatMessageProperty.Name">
      <summary>Returns the name "WebBodyFormatMessageProperty".</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.WebContentFormat">
      <summary>Specifies the message formats to which content types of incoming messages can be mapped.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.WebContentFormat.Default">
      <summary>The format to map to cannot be determined.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.WebContentFormat.Xml">
      <summary>Map to the XML format.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.WebContentFormat.Json">
      <summary>Map to the JSON format.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.WebContentFormat.Raw">
      <summary>Map to the "Raw" binary format.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.WebHttpBehavior">
      <summary>Enables the Web programming model for a Silverlight client. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.WebHttpBehavior" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>This method is not used in Silverlight 5.</summary>
      <param name="endpoint">The service endpoint to be accessed.</param>
      <param name="bindingParameters">The binding parameters that support modifying the bindings.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.AddClientErrorInspector(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Adds a client error inspector to the specified client runtime.</summary>
      <param name="endpoint">A service endpoint.</param>
      <param name="clientRuntime">The client runtime.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" /> method to support modification or extension of the client across an endpoint.</summary>
      <param name="endpoint">The endpoint that exposes the contract the client is to access.</param>
      <param name="clientRuntime">The client to which the custom behavior is applied.</param>
      <exception cref="T:System.ArgumentNullException">Either the <paramref name="endpoint" /> of the <paramref name="clientRuntime" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>This method is not used in Silverlight 5.</summary>
      <param name="endpoint">The endpoint that exposes the contract.</param>
      <param name="endpointDispatcher">The endpoint dispatcher to which the behavior is applied.</param>
    </member>
    <member name="P:System.ServiceModel.Description.WebHttpBehavior.DefaultBodyStyle">
      <summary>Gets and sets the default message body style.</summary>
      <returns>One of the values defined in the <see cref="T:System.ServiceModel.Web.WebMessageBodyStyle" /> enumeration.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebHttpBehavior.DefaultOutgoingRequestFormat">
      <summary>Gets and sets the default outgoing request format.</summary>
      <returns>One of the values defined in the <see cref="T:System.ServiceModel.Web.WebMessageFormat" /> enumeration.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebHttpBehavior.DefaultOutgoingResponseFormat">
      <summary>Gets and sets the default outgoing response format.</summary>
      <returns>One of the values defined in the <see cref="T:System.ServiceModel.Web.WebMessageFormat" /> enumeration.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebHttpBehavior.FaultExceptionEnabled">
      <summary>Gets or sets the flag that specifies whether a FaultException is generated when an internal server error (HTTP status code: 500) occurs.</summary>
      <returns>Returns true if the flag is enabled; otherwise returns false.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.GetQueryStringConverter(System.ServiceModel.Description.OperationDescription)">
      <summary>Gets the query string converter.</summary>
      <returns>A <see cref="T:System.ServiceModel.Dispatcher.QueryStringConverter" /> instance.</returns>
      <param name="operationDescription">A contract that characterizes an operation in terms of the messages it exchanges.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.GetReplyClientFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Gets the reply formatter on the client for the specified endpoint and service operation.</summary>
      <returns>An <see cref="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" /> reference to the reply formatter on the client for the specified operation and endpoint.</returns>
      <param name="operationDescription">A contract that characterizes an operation in terms of the messages it exchanges.</param>
      <param name="endpoint">The service endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.GetRequestClientFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Gets the request formatter on the client for the specified service operation and endpoint.</summary>
      <returns>An <see cref="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" /> reference to the request formatter on the client for the specified operation and endpoint.</returns>
      <param name="operationDescription">A contract that characterizes an operation in terms of the messages it exchanges.</param>
      <param name="endpoint">The service endpoint to be accessed by the client.</param>
      <exception cref="T:System.NotSupportedException">The JSON format is not currently supported in Silverlight.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Confirms that the endpoint meets the requirements for the Web programming model.</summary>
      <param name="endpoint">The service endpoint.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Endpoint" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">Message headers are included or the a scheme other than HTTP(S) is used or manual addressing is configured incorrectly.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.ValidateBinding(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Ensures the binding is valid for use with the Silverlight Web Programming Model.</summary>
      <param name="endpoint">The service endpoint.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.QueryStringConverter">
      <summary>This class converts a parameter from an object to its query string representation. </summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.QueryStringConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.QueryStringConverter" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.QueryStringConverter.CanConvert(System.Type)">
      <summary>Determines whether the specified type can be converted to and from a string representation.</summary>
      <returns>A value that specifies whether the type can be converted.</returns>
      <param name="type">The <see cref="T:System.Type" /> to convert.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString(System.Object,System.Type)">
      <summary>Converts a parameter to a query string representation.</summary>
      <returns>The parameter name and value.</returns>
      <param name="parameter">The parameter to convert.</param>
      <param name="parameterType">The <see cref="T:System.Type" /> of the parameter to convert.</param>
    </member>
    <member name="T:System.ServiceModel.Web.IncomingWebResponseContext">
      <summary>Provides programmatic access to the context of the incoming Web response.</summary>
    </member>
    <member name="P:System.ServiceModel.Web.IncomingWebResponseContext.Headers">
      <summary>Gets the headers from the incoming Web response.</summary>
      <returns>A <see cref="T:System.Net.WebHeaderCollection" /> instance that contains the headers from the incoming Web response.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.IncomingWebResponseContext.StatusCode">
      <summary>Gets the status code of the incoming Web response.</summary>
      <returns>A <see cref="T:System.Net.HttpStatusCode" /> instance that contains the status code of the incoming Web response.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.IncomingWebResponseContext.StatusDescription">
      <summary>Gets the status description of the incoming Web response.</summary>
      <returns>The status description of the incoming Web response.</returns>
    </member>
    <member name="T:System.ServiceModel.Web.OutgoingWebRequestContext">
      <summary>Provides programmatic access to the context of the outgoing Web request.</summary>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.Accept">
      <summary>Gets and sets the Accept header value from the outgoing Web request.</summary>
      <returns>The Accept header from the outgoing Web request.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.ContentLength">
      <summary>Gets and sets the content length header value of the outgoing Web request.</summary>
      <returns>The content length header of the outgoing Web request.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.ContentType">
      <summary>Gets and sets the content type header value from the outgoing Web request.</summary>
      <returns>The content type header from the outgoing Web request.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.Headers">
      <summary>Gets the headers for the outgoing Web request.</summary>
      <returns>A <see cref="T:System.Net.WebHeaderCollection" /> instance that contains the headers of the outgoing Web request.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.IfMatch">
      <summary>Gets and sets the IfMatch header value from the outgoing Web request.</summary>
      <returns>The IfMatch header from the outgoing Web request.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.IfNoneMatch">
      <summary>Gets and sets the IfNoneMatch header value from the outgoing Web request.</summary>
      <returns>The IfNoneMatch header from the outgoing Web request.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.IfUnmodifiedSince">
      <summary>Gets and sets the IfUnmodifiedSince header value from the outgoing Web request.</summary>
      <returns>The IfUnmodifiedSince header from the outgoing Web request.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.Method">
      <summary>Gets the HTTP method of the outgoing Web request.</summary>
      <returns>The HTTP method of the outgoing Web request.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.SuppressEntityBody">
      <summary>Gets a value that indicates whether Windows Communication Foundation (WCF) omits data that is normally written to the entity body of the response and forces an empty response to be returned.</summary>
      <returns>If true, WCF omits any data that is normally written to the entity body of the response and forces an empty response to be returned.</returns>
    </member>
    <member name="T:System.ServiceModel.Web.WebGetAttribute">
      <summary>Indicates that an operation is logically a retrieval operation and that it can be called by the Web HTTP programming model.</summary>
    </member>
    <member name="M:System.ServiceModel.Web.WebGetAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebGetAttribute" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Web.WebGetAttribute.BodyStyle">
      <summary>Gets and sets the body style of the messages that are sent to and from an operation.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.Web.WebMessageBodyStyle" /> enumeration values.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebGetAttribute.IsBodyStyleSetExplicitly">
      <summary>Gets the <see cref="P:System.ServiceModel.Web.WebGetAttribute.IsBodyStyleSetExplicitly" /> property.</summary>
      <returns>A value that specifies whether the <see cref="P:System.ServiceModel.Web.WebGetAttribute.BodyStyle" /> property is set.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebGetAttribute.IsRequestFormatSetExplicitly">
      <summary>Gets the <see cref="P:System.ServiceModel.Web.WebGetAttribute.IsRequestFormatSetExplicitly" /> property.</summary>
      <returns>A value that specifies whether the <see cref="P:System.ServiceModel.Web.WebGetAttribute.RequestFormat" /> property was set.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebGetAttribute.IsResponseFormatSetExplicitly">
      <summary>Gets the <see cref="P:System.ServiceModel.Web.WebGetAttribute.IsResponseFormatSetExplicitly" /> property.</summary>
      <returns>A value that specifies whether the <see cref="P:System.ServiceModel.Web.WebGetAttribute.ResponseFormat" /> property was set.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebGetAttribute.RequestFormat">
      <summary>Gets and sets the <see cref="P:System.ServiceModel.Web.WebGetAttribute.RequestFormat" /> property.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.Web.WebMessageFormat" /> enumeration values.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebGetAttribute.ResponseFormat">
      <summary>Gets and sets the <see cref="P:System.ServiceModel.Web.WebGetAttribute.ResponseFormat" /> property.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.Web.WebMessageFormat" /> enumeration values.</returns>
    </member>
    <member name="M:System.ServiceModel.Web.WebGetAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" /> method.</summary>
      <param name="operationDescription">The operation description.</param>
      <param name="bindingParameters">A collection of binding parameters.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebGetAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" /> method.</summary>
      <param name="operationDescription">The operation description.</param>
      <param name="clientOperation">The client operation.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebGetAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" /> method.</summary>
      <param name="operationDescription">The operation description.</param>
      <param name="dispatchOperation">The operation to dispatch to.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebGetAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)" /> method.</summary>
      <param name="operationDescription">The operation description.</param>
    </member>
    <member name="P:System.ServiceModel.Web.WebGetAttribute.UriTemplate">
      <summary>Gets and sets the Uniform Resource Identifier (URI) template for the operation.</summary>
      <returns>The URI template for an operation.</returns>
    </member>
    <member name="T:System.ServiceModel.Web.WebInvokeAttribute">
      <summary>Indicates an operation is logically an invoke operation and that it can be called by the Web HTTP programming.</summary>
    </member>
    <member name="M:System.ServiceModel.Web.WebInvokeAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebGetAttribute" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Web.WebInvokeAttribute.BodyStyle">
      <summary>Gets and sets the body style of the messages that are sent to and from an operation.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.Web.WebMessageBodyStyle" /> enumeration values.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebInvokeAttribute.IsBodyStyleSetExplicitly">
      <summary>Gets the <see cref="P:System.ServiceModel.Web.WebInvokeAttribute.IsBodyStyleSetExplicitly" /> property.</summary>
      <returns>A value that specifies whether the <see cref="P:System.ServiceModel.Web.WebGetAttribute.BodyStyle" /> property was set explicitly.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebInvokeAttribute.IsRequestFormatSetExplicitly">
      <summary>Gets the <see cref="P:System.ServiceModel.Web.WebInvokeAttribute.IsRequestFormatSetExplicitly" /> property.</summary>
      <returns>A value that specifies whether the <see cref="P:System.ServiceModel.Web.WebGetAttribute.RequestFormat" /> property was set.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebInvokeAttribute.IsResponseFormatSetExplicitly">
      <summary>Gets the <see cref="P:System.ServiceModel.Web.WebInvokeAttribute.IsResponseFormatSetExplicitly" /> property.</summary>
      <returns>A value that specifies whether the <see cref="P:System.ServiceModel.Web.WebGetAttribute.ResponseFormat" /> property was set.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebInvokeAttribute.Method">
      <summary>Gets and sets the protocol (for example HTTP) method an operation responds to.</summary>
      <returns>The protocol method associated with the operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebInvokeAttribute.RequestFormat">
      <summary>Gets and sets the <see cref="P:System.ServiceModel.Web.WebInvokeAttribute.RequestFormat" /> property.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.Web.WebMessageFormat" /> enumeration values.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebInvokeAttribute.ResponseFormat">
      <summary>Gets and sets the <see cref="P:System.ServiceModel.Web.WebInvokeAttribute.ResponseFormat" /> property.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.Web.WebMessageFormat" /> enumeration values.</returns>
    </member>
    <member name="M:System.ServiceModel.Web.WebInvokeAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" /> method.</summary>
      <param name="operationDescription">The operation description.</param>
      <param name="bindingParameters">A collection of binding parameters.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebInvokeAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" /> method.</summary>
      <param name="operationDescription">The operation description.</param>
      <param name="clientOperation">The client operation.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebInvokeAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" /> method.</summary>
      <param name="operationDescription">The operation description.</param>
      <param name="dispatchOperation">The operation to dispatch to.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebInvokeAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)" /> method.</summary>
      <param name="operationDescription">The operation description.</param>
    </member>
    <member name="P:System.ServiceModel.Web.WebInvokeAttribute.UriTemplate">
      <summary>The Uniform Resource Identifier (URI) template for an operation.</summary>
      <returns>The URI template for t operation.</returns>
    </member>
    <member name="T:System.ServiceModel.Web.WebMessageBodyStyle">
      <summary>An enumeration that specifies whether to wrap parameter and return values within XML elements.</summary>
    </member>
    <member name="F:System.ServiceModel.Web.WebMessageBodyStyle.Bare">
      <summary>Both requests and responses are not wrapped.</summary>
    </member>
    <member name="F:System.ServiceModel.Web.WebMessageBodyStyle.Wrapped">
      <summary>Both requests and responses are wrapped.</summary>
    </member>
    <member name="F:System.ServiceModel.Web.WebMessageBodyStyle.WrappedRequest">
      <summary>Requests are wrapped, responses are not wrapped.</summary>
    </member>
    <member name="F:System.ServiceModel.Web.WebMessageBodyStyle.WrappedResponse">
      <summary>Responses are wrapped, requests are not wrapped.</summary>
    </member>
    <member name="T:System.ServiceModel.Web.WebMessageFormat">
      <summary>An enumeration that specifies the format of Web messages.</summary>
    </member>
    <member name="F:System.ServiceModel.Web.WebMessageFormat.Xml">
      <summary>The XML format.</summary>
    </member>
    <member name="F:System.ServiceModel.Web.WebMessageFormat.Json">
      <summary>The JavaScript Object Notation (JSON) format.</summary>
    </member>
    <member name="T:System.ServiceModel.Web.WebOperationContext">
      <summary>A helper class that provides easy access to contextual properties of Web requests and responses.</summary>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.#ctor(System.ServiceModel.OperationContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebOperationContext" /> class with the specified <see cref="T:System.ServiceModel.OperationContext" /> instance.</summary>
      <param name="operationContext">The operation context.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.Attach(System.ServiceModel.OperationContext)">
      <summary>Attaches the current <see cref="T:System.ServiceModel.Web.WebOperationContext" /> instance to the specified <see cref="T:System.ServiceModel.OperationContext" /> instance.</summary>
      <param name="owner">The <see cref="T:System.ServiceModel.OperationContext" /> to attach to.</param>
    </member>
    <member name="P:System.ServiceModel.Web.WebOperationContext.Current">
      <summary>Gets the current Web operation context.</summary>
      <returns>A <see cref="T:System.ServiceModel.Web.WebOperationContext" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.Detach(System.ServiceModel.OperationContext)">
      <summary>Detaches the current <see cref="T:System.ServiceModel.Web.WebOperationContext" /> instance from the specified <see cref="T:System.ServiceModel.OperationContext" /> instance.</summary>
      <param name="owner">The <see cref="T:System.ServiceModel.OperationContext" /> to detach from.</param>
    </member>
    <member name="P:System.ServiceModel.Web.WebOperationContext.IncomingResponse">
      <summary>Gets the Web response context for the request being received.</summary>
      <returns>An <see cref="T:System.ServiceModel.Web.IncomingWebResponseContext" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebOperationContext.OutgoingRequest">
      <summary>Gets the Web request context for the request being sent.</summary>
      <returns>An <see cref="T:System.ServiceModel.Web.OutgoingWebRequestContext" /> instance.</returns>
    </member>
  </members>
</doc>